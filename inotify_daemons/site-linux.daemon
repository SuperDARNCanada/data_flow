#!/bin/bash
# Copyright 2022 SuperDARN Canada, University of Saskatchewan
# Author: Theodore Kolkman
#
# Inotify script to be run on Site-Linux computer. Executes convert_and_restructure and 
# rsync_to_campus, one after the other
#
# Dependencies:
#	- inotifywait (installed by zypper in inotify-tools)
#
# Triggers from flag sent by Borealis computer inotify daemon when rsync_to_nas finishes

###################################################################################################

source "${HOME}/.bashrc" # source the RADARID and SDCOPY

readonly WATCH_DIR="${HOME}/data_flow/.inotify_watchdir"
mkdir -p $WATCH_DIR

script_name=$(echo $(basename $0) | cut --fields 1 --delimiter '.')
readonly LOG_DIR="${HOME}/logs/inotify_daemons"
mkdir -p $LOG_DIR
readonly LOGFILE="${LOG_DIR}/${script_name}.log"

# Location of inotify watch directory for flags on superdarn-cssdp. Should match up with 
# superdarn-cssdp inotify's WATCH_DIR
readonly REMOTE_FLAG_DEST="/home/mrcopy/data_flow/.inotify_watchdir"

# Flag sent out to trigger superdarn-cssdp dataflow
readonly FLAG_SRC="${HOME}/data_flow/.inotify_flags"
mkdir -p $FLAG_SRC
readonly FLAG_OUT="${FLAG_SRC}/.site-linux_flag_${RADARID}"

###################################################################################################

exec &>> $LOGFILE # Redirect STDOUT and STDERR to $LOGFILE
echo "Starting $0 at $(date --utc "+%Y%m%d %H:%M:%S UTC")"

inotifywait --recursive --monitor --syslog --timefmt '%Y%m%d.%H:%M:%S' --format '%T %w %e %f' --event MOVED_TO $WATCH_DIR | \
while read TIME DIRECTORY ACTION FILE # These must line up with format parameters
do
    if [[ "$FILE" =~ \.borealis_flag$ ]]   # Only interested in 2 hour files
    then
        echo "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify triggered on $0"

        echo "Executing convert_and_restructure..."
        $HOME/data_flow/site-linux/convert_and_restructure
        echo "Executing rsync_to_campus..."
        $HOME/data_flow/site-linux/rsync_to_campus

        # Reset flag by removing .borealis_flag, so inotify can be triggered again
        rm --verbose --force "${DIRECTORY}${FILE}"

        # Send "flag" file to notify mrcopy to start next script
        touch $FLAG_OUT
        rsync -av --rsh=ssh "${FLAG_OUT}" "${SDCOPY}:${REMOTE_FLAG_DEST}"
        echo "Sent ${FLAG_OUT} to  ${SDCOPY}:${REMOTE_FLAG_DEST}"

        printf "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify finished on $0\n\n"
    fi
done