#!/bin/bash
# Copyright 2022 SuperDARN Canada, University of Saskatchewan
# Author: Theodore Kolkman
#
# Inotify script to be run on Site-Linux computer. Executes plot_antennas_iq and
# rsync_to_campus, one after the other
#
# Dependencies:
#	- inotifywait (installed by zypper in inotify-tools)
#   - RADAR_ID and SDCOPY set as environment variables in ${HOME}/.profile
#
# Triggers from flag sent by Borealis computer inotify daemon when rsync_to_nas finishes

###################################################################################################

source "${HOME}/.profile"	# Load in environment variables

readonly WATCH_DIR="${HOME}/data_flow/.inotify_watchdir"
mkdir --parents $WATCH_DIR

script_name=$(echo $(basename $0) | cut --fields 1 --delimiter '.')
readonly LOG_DIR="${HOME}/logs/inotify_daemons"
mkdir --parents $LOG_DIR
readonly LOGFILE="${LOG_DIR}/${script_name}.log"

# Location of inotify watch directory for flags on sdc-serv. Should match up with 
# sdc-serv inotify's WATCH_DIR
readonly REMOTE_FLAG_DEST="/home/dataman/data_flow/.inotify_watchdir"

# Flag sent out to trigger campus dataflow
readonly FLAG_SRC="${HOME}/data_flow/.inotify_flags"
mkdir --parents $FLAG_SRC
readonly FLAG_OUT="${FLAG_SRC}/.site-linux_flag_${RADAR_ID}"

###################################################################################################

exec &>> $LOGFILE # Redirect STDOUT and STDERR to $LOGFILE
printf "Starting $0 at $(date --utc "+%Y%m%d %H:%M:%S UTC")\n"

inotifywait --recursive --monitor --syslog --timefmt '%Y%m%d.%H:%M:%S' --format '%T %w %e %f' --event MOVED_TO $WATCH_DIR | \
while read TIME DIRECTORY ACTION FILE # These must line up with format parameters
do
    if [[ "$FILE" =~ \.borealis_flag$ ]]   # Only interested in 2 hour files
    then
        printf "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify triggered on $0\n"

        printf "Generating antennas iq plots...\n"
        $HOME/data_flow/site-linux/plot_antennas_iq <&-
        printf "Executing rsync_to_campus...\n"
        $HOME/data_flow/site-linux/rsync_to_campus <&-

        # Reset flag by removing .borealis_flag, so inotify can be triggered again
        rm --verbose --force "${DIRECTORY}${FILE}"

        # Send "flag" file to notify sdc-serv on campus to start next script
        printf "Sending ${FLAG_OUT} to ${SDCOPY}:${REMOTE_FLAG_DEST}\n"
        touch $FLAG_OUT
        rsync --archive --rsh=ssh "${FLAG_OUT}" "${SDCOPY}:${REMOTE_FLAG_DEST}" <&-

        # Close the multiplexed SSH session opened by rsync_to_campus script
        ssh -O exit ${SDCOPY} <&-

        printf "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify finished on $0\n\n"
    fi
done