#!/bin/bash
# Copyright 2022 SuperDARN Canada, University of Saskatchewan
# Author: Theodore Kolkman
#
# Inotify script to be run on Borealis computer. Executes rsync_to_nas
#
# Dependencies:
#	- inotifywait (installed by zypper in inotify-tools)
#
# Triggers rsync_to_nas when 2-hour set of Borealis files finish writing
#
# inotify watches the directory borealis writes to, and triggers the rsync_to_nas
# script only when a 2-hour site file is created. Since these files are only created
# once, and once they're created the previous 2-hour block is finished writing, 
# the rsync_to_nas script will execute immediately after Borealis finishes writing
# the 2-hour file

source "${HOME}/.profile"	# Get SITE_LINUX

WATCH_DIR="/data/borealis_data" # For SAS testing
# WATCH_DIR=${HOME}/testing/data_flow_testing/src #TESTING 
LOGFILE="${HOME}/logs/inotify_daemons/$(echo $(basename $0) | cut -f 1 -d '.').log"
FILTER_TIME=15  # Minumum time between script executions

# Location of inotify watch directory for flags on site linux
readonly FLAG_DEST="/home/transfer/test_data_flow/data_flow/.inotify_watchdir" # For SAS testing
# FLAG_DEST=/home/radar/data_flow/.inotify_watchdir #TESTING

# Flag to send to start next script
readonly FLAG_OUT="${HOME}/test_data_flow/data_flow/.inotify_flags/.rsync_to_nas_flag" # For SAS testing

exec &>> $LOGFILE

echo "Starting $(basename $0) at $(date --utc "+%Y%m%d %H:%M:%S UTC")"

# Inotify is triggered multiple times as multiple 2-hour site files are created. We only want 
# to have our script execute once when these files are created. When inotify triggers multiple
# times, each instance is put in a queue by `read`, so after the first time the script executes,
# it will execute again multiple times in quick succession. To filter out these extra script 
# calls, the time (in seconds since the epoch) when the script executes the first time is recorded.
# Then, before executing the script, the current time is compared to the last time it executed. This
# filters out all the extra inotifywait triggers.
endtime=0

inotifywait -r --monitor --syslog --timefmt '%Y%m%d.%H:%M:%S' --format '%T %w %e %f' -e create $WATCH_DIR | \
while read TIME DIRECTORY ACTION FILE # These must line up with format parameters
do
    if [[ "$FILE" =~ .*\.site$ ]]   # Only interested in 2 hour .site files
    then
        # If script just executed, then don't execute again
        cur_time=$(date "+%s")
        if [[ $(($endtime + $FILTER_TIME)) -lt $cur_time ]]; then
            # This if statement will only trigger once the previous 2-hour file is finished writing
            echo "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify triggered on $(basename $0)"
            $HOME/test_data_flow/data_flow/borealis/rsync_to_nas $FILE # Pass current filename so script knows what to omit # For SAS testing

            # Send "flag" file to notify site-linux computer to start next script
            printf "\nTriggering next script via inotify...\n"
            touch $FLAG_OUT
            rsync -av --rsh=ssh "${FLAG_OUT}" "${SITE_LINUX}:${FLAG_DEST}"
            # rsync -av --rsh=ssh "${FLAG_OUT}" "${FLAG_DEST}" #TESTING

            echo "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify finished on $(basename $0)"

            endtime=$(date "+%s")
        fi
    fi
done