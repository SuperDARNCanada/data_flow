#!/bin/bash
# Copyright 2022 SuperDARN Canada, University of Saskatchewan
# Author: Theodore Kolkman
#
# Inotify script to be run on SuperDARN-CSSDP. Executes convert_on_campus and 
# distribute_borealis_data, one after the other
#
# Dependencies:
#	- inotifywait (installed by zypper in inotify-tools)
#
# Triggers from flag sent by Site-Linux computer inotify daemon when rsync_to_campus finishes
#
# Parameter RADAR_ID: [sas, pgr, rkn, inv, cly]

###################################################################################################

if [[ $# -ne 1 ]]; then
    printf "Usage: ./campus.daemon RADAR_ID\n"
    exit 1
fi

RADAR_ID=$1

readonly WATCH_DIR="${HOME}/data_flow/.inotify_watchdir"
mkdir --parents $WATCH_DIR
readonly LOCK_FILE="${HOME}/data_flow/.${RADAR_ID}_dataflow_lock"

script_name=$(echo $(basename $0) | cut --fields 1 --delimiter '.')
readonly LOG_DIR="${HOME}/logs/inotify_daemons"
mkdir --parents $LOG_DIR
readonly LOGFILE="${LOG_DIR}/${script_name}_${RADAR_ID}.log"

# Location of inotify watch directory for flags. Should match up with next scripts WATCH_DIR (TODO)
readonly REMOTE_FLAG_DEST="${HOME}/data_flow/.inotify_watchdir"

# Flag sent out to trigger next dataflow script (TODO: Link with next dataflow step)
readonly FLAG_SRC="${HOME}/data_flow/.inotify_flags"
mkdir --parents $FLAG_SRC
readonly FLAG_OUT="${FLAG_SRC}/.campus_dataflow_flag_${RADAR_ID}"

###################################################################################################

exec &>> $LOGFILE # Redirect STDOUT and STDERR to $LOGFILE
printf "Starting $0 $RADAR_ID at $(date --utc "+%Y%m%d %H:%M:%S UTC")\n"
touch $LOCK_FILE

inotifywait --recursive --monitor --syslog --timefmt '%Y%m%d.%H:%M:%S' --format '%T %w %e %f' --event MOVED_TO $WATCH_DIR | \
while read TIME DIRECTORY ACTION FILE # These must line up with format parameters
do
    if [[ "$FILE" =~ \.site-linux_flag_${RADAR_ID}$ ]]   # Only interested in 2 hour files
    then
        printf "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify triggered on $0\n"

        # Lock with radar specific file to ensure only one instance of script runs for each site
        printf "Executing convert_on_campus...\n"
        flock --nonblock $LOCK_FILE $HOME/data_flow/superdarn-cssdp/convert_on_campus $RADAR_ID
        printf "Executing distribute_borealis_data...\n"
        flock --nonblock $LOCK_FILE $HOME/data_flow/superdarn-cssdp/distribute_borealis_data $RADAR_ID

        # Reset flag by removing .site-linux_flag_[RADAR_ID], so inotify can be triggered again
        rm --verbose --force "${DIRECTORY}${FILE}"

        # Send out "flag" to trigger next script with inotify (TODO)
        touch $FLAG_OUT
        rsync --archive --rsh=ssh $FLAG_OUT $REMOTE_FLAG_DEST
        printf "Sent ${FLAG_OUT} to  ${REMOTE_FLAG_DEST}\n"


        printf "$(date --utc "+%Y%m%d %H:%M:%S UTC") - Inotify finished on $0\n\n"
    fi
done