#!/bin/bash
# Copyright 2021 SuperDARN Canada, University of Saskatchewan
# Author: Marci Detwiller
#
# Last Edited: October 2022 by Theo Kolkman
# Refactored for inotify usage
#
# A script that uses pydarnio to convert Borealis rawacf files to SuperDARN DMap files. Uses the
# borealis_array_to_dmap.py script to convert already-restructured array files to dmap. 
# 
# This script is executed for all sites, but only performs conversions for sites specified in the
# SITES array. Only sites that have bandwidth limits and don't transfer dmap files to campus should
# be specified in this array.
#
# Dependencies:
#	- pydarnio installed in a virtualenv at $HOME/pydarnio-env
#	- ssh link established between SuperDARN-CSSDP and TELEMETRY computers
#
# Usage: ./convert_on_campus RADARID
# Parameter RADARID: [sas, pgr, rkn, inv, cly]
#
# This script should be run via an inotify daemon triggerring when the previous data flow script 
# finishes execution. To ensure only one instance runs for each site, use flock within the inotify
# daemon code

###################################################################################################

# Specify error behaviour
set -o errexit   # abort on nonzero exitstatus
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes

# Load in function library
source "${HOME}/data_flow/library/data_flow_functions.sh"

###################################################################################################

RADARID=$1

# Sites that have to convert dmap files on campus. If a site isn't specified here, then this script 
# is skipped and the next data flow script executes immediately
readonly SITES=("cly" "rkn")

# Define directories
readonly DATA_DIR="/sddata"
readonly SOURCE="${DATA_DIR}/${RADARID}_holding_dir"
readonly DEST="${DATA_DIR}/${RADARID}_data"
readonly PROBLEM_FILES_DEST="${DATA_DIR}/conversion_failure"

# Create log file. New file created daily
readonly LOGGING_DIR="${HOME}/logs/convert_on_campus/$(date +%Y)/$(date +%m)"
mkdir --parents $LOGGING_DIR
readonly LOGFILE="${LOGGING_DIR}/${RADARID}.$(date +%Y%m%d).convert_on_campus.log"
readonly  SUMMARY_DIR="${HOME}/logs/convert_on_campus/summary/$(date +%Y)/$(date +%m)"
mkdir --parents $SUMMARY_DIR
readonly SUMMARY_FILE="${SUMMARY_DIR}/${RADARID}.$(date -u +%Y%m%d).convert_on_campus_summary.log"

# Define variables needed to rsync summary files back to campus
readonly TELEMETRY_DIR="/home/telemetry/data_flow_logs/${RADARID}/convert_on_campus"
readonly TELEMETRY="telemetry@chapman.usask.ca"
readonly RSH="ssh -p 2222"

###################################################################################################

exec &>> $LOGFILE # Redirect STDOUT and STDERR to $LOGFILE

printf "################################################################################\n\n" | tee --append $SUMMARY_FILE

printf "Executing $0 on $(hostname)\n" | tee --append $SUMMARY_FILE
date --utc "+%Y%m%d %H:%M:%S UTC" | tee --append $SUMMARY_FILE

if [[ " ${SITES[*]} " =~ " ${RADARID} " ]]; then

    printf "Conversion directory: $DATA_DIR\n\n"

    RAWACF_CONVERT_FILES=$(find "${SOURCE}" -maxdepth 1 -name "*rawacf.hdf5" -type f)
    source "${HOME}/pydarnio-env/bin/activate"

    if [[ -n $RAWACF_CONVERT_FILES ]]; then
        printf "Converting the following files:\n"
        printf '%s\n' "${RAWACF_CONVERT_FILES[@]}"
    else
        printf "No files to be converted.\n" | tee --append $SUMMARY_FILE
    fi

    for f in $RAWACF_CONVERT_FILES
    do
        printf "\nConverting ${f}\n"
        printf "python3 borealis_array_to_dmap.py $(basename ${f})\n"
        python3 "${HOME}/data_flow/superdarn-cssdp/borealis_array_to_dmap.py" $f
        ret=$?
        if [[ $ret -eq 0 ]]; then
            # Move the resulting files if all was successful then remove the source site file.
            dmap_file_start="${f%.rawacf.hdf5}"

            # Remove last character(s) (slice_id)
            slice_id="${dmap_file_start##*.}"
            dmap_file_wo_slice_id="${dmap_file_start%${slice_id}}"

            ordinal_id="$(($slice_id + 97))"
            file_character=$(chr $ordinal_id)
            dmap_file="${dmap_file_wo_slice_id}${file_character}.rawacf.bz2"
            mv --verbose $dmap_file $DEST
            mv --verbose $f $DEST
            printf "Successfully converted: ${f}\n" | tee --append $SUMMARY_FILE
        else
            printf "File failed to convert: ${f}\n" | tee --append $SUMMARY_FILE
            mv --verbose $f $PROBLEM_FILES_DEST
        fi
    done
else
    printf "\nNot converting files for $RADARID.\n" | tee --append $SUMMARY_FILE
fi

printf "\nFinished $(basename $0). End time: $(date --utc "+%Y%m%d %H:%M:%S UTC")\n\n" | tee --append $SUMMARY_FILE

# Sync summary log file with campus
printf "Syncing $SUMMARY_FILE to $TELEMETRY:$TELEMETRY_DIR\n\n"
rsync --archive --rsh="$RSH" $SUMMARY_FILE $TELEMETRY:$TELEMETRY_DIR

exit
