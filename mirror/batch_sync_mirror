#!/bin/bash

# A script to either run the weekly or monthly comparison between our mirror and BAS/NSSC.

# Weekly:
#   Compare our mirror to the BAS/NSSC mirror 1 month at a time going back 12 months
#   Download any rawacf files that we are missing. Runs weekly.

# Monthly:
#   Compare our mirror to the BAS/NSSC mirror 1 month at a time going back to January 2006
#   Download any rawacf files that we are missing. Runs monthly.

MIRROR=$1
SYNC_TYPE=$2
HOLDING_DIR=/data/holing/${MIRROR}  # Add /test/ for testing purposes

DATE_UTC=$(date -u)

if [[ "${SYNC_TYPE}" == "weekly" ]]
then
  today=$(date +%Y%m%d)
  startdate=$(date -d "$today - 1 year" +%Y%m)
  # Start date is the 1st of the month, 1 year ago
  startdate="${startdate}01"
  d=${startdate}
  # End date is the 1st of the month, now
  enddate=$(date +%Y%m)
  enddate="${enddate}01"
  echo "Date range: ${startdate} - ${enddate}"

  # Loop will end before we get to the current month
  # Last iteration will be the month before the current month
  while [ "$d" != "${enddate}" ]
  do
    yearmonth=$(date -d "$d" +%Y%m)
    /home/dataman/data_flow/mirror/sync_mirror_data.sh ${HOLDING_DIR} ${MIRROR} ${yearmonth}
    d=$(date -d "$d + 1 month" +%Y%m%d)
  done

elif [[ "${SYNC_TYPE}" == "monthly" ]]
then
  # Check if mirror was provided
  if [[ "${MIRROR}" == "BAS" ]]
  then
    mirror="bas"
  elif [[ "${MIRROR}" == "NSSC" ]]
  then
    mirror="nssc"
  else
    echo -e "\n${DATE_UTC}\nPlease provide mirror (BAS or NSSC)...exiting"
    exit
  fi

  # Start date is the beginning of 2006
  startdate=20060101
  d=${startdate}
  today=$(date +%Y%m%d)
  # End date is the 1st of the current month
  enddate=$(date +%Y%m)
  enddate="${enddate}01"
  echo "Date range: ${startdate} - ${enddate}"

  # Loop ends before current month
  while [ "$d" != "${enddate}" ]
  do
    yearmonth=$(date -d "$d" +%Y%m)
    /home/dataman/data_flow/mirror/sync_mirror_data.sh ${HOLDING_DIR} ${MIRROR} ${yearmonth}
    d=$(date -d "$d + 1 month" +%Y%m%d)
  done

  # Update mirror comparison
  CMP_DIR=/home/dataman/Documents/mirror_comparison_${today}/
  mkdir -p ${CMP_DIR}

  if [[ "${MIRROR}" == "BAS" ]]
  then
    HASHES_DIRS=/home/dataman/tmp_hashes_usask/${today}.*
    # Try to figure out how to execute the following line with mirror variable
    find ${HASHES_DIRS} -name '*data.not_at_bas' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.not_at_${mirror}
  elif [[ "${MIRROR}" == "NSSC" ]]
  then
    HASHES_DIRS=/home/dataman/tmp_hashes_usask_nssc_cmp/${today}.*
    find ${HASHES_DIRS} -name '*data.not_at_nssc' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.not_at_${mirror}
  fi

  find ${HASHES_DIRS} -name '*data.different' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.different
  # find ${HASHES_DIRS} -name '*data.not_at_bas' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.not_at_${mirror}
  find ${HASHES_DIRS} -name '*data.not_at_usask' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.not_at_usask
  find ${HASHES_DIRS} -name '*data.failed' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.failed
  find ${HASHES_DIRS} -name '*data.blocked' -exec cat '{}' \; > ${CMP_DIR}/${mirror}.blocked

  mkdir -p ${CMP_DIR}/sorted
  sort -k2 ${CMP_DIR}/${mirror}.different > ${CMP_DIR}/sorted/${mirror}_different
  sort -k2 ${CMP_DIR}/${mirror}.not_at_${mirror} > ${CMP_DIR}/sorted/${mirror}_not_at_${mirror}
  sort ${CMP_DIR}/${mirror}.not_at_usask > ${CMP_DIR}/sorted/${mirror}_not_at_usask
  sort ${CMP_DIR}/${mirror}.failed > ${CMP_DIR}/sorted/${mirror}_failed
  sort ${CMP_DIR}/${mirror}.blocked > ${CMP_DIR}/sorted/${mirror}_blocked

else
  echo -e "\n${DATE_UTC}\nPlease provide sync type (weekly or monthly)...exiting"
  exit
fi
